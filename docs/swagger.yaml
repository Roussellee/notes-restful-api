definitions:
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.Note:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      tags:
        description: Добавляем поле для тегов
        items:
          $ref: '#/definitions/models.Tag'
        type: array
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    required:
    - content
    - title
    type: object
  models.ShareNoteRequest:
    properties:
      user_id:
        type: integer
    type: object
  models.SuccessResponse:
    properties:
      data:
        description: Данные, возвращаемые в ответе (например, заметка)
      message:
        description: Сообщение об успешном выполнении
        type: string
    type: object
  models.Tag:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.UserProfile:
    properties:
      created_at:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
  models.UserSuccess:
    properties:
      json:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: Notes API - это RESTful API для системы управления заметками, написанный
    на Go с использованием Gin и PostgreSQL + PgAmdmin4.
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Аутентифицирует пользователя и устанавливает cookie с токеном
      parameters:
      - description: Пользователь
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: Успешно аутентифицирован
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Неавторизованный доступ
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      tags:
      - users
  /notes:
    get:
      description: Получает список заметок с пагинацией
      parameters:
      - description: Номер страницы
        in: query
        name: page
        type: integer
      - description: Количество заметок на странице
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список заметок
          schema:
            items:
              $ref: '#/definitions/models.Note'
            type: array
        "401":
          description: Неавторизованный доступ
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: Получение списка заметок
      tags:
      - notes
    post:
      consumes:
      - application/json
      description: Создает новую заметку
      parameters:
      - description: Заметка
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/models.Note'
      produces:
      - application/json
      responses:
        "201":
          description: Созданная заметка
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      tags:
      - notes
  /notes/{id}:
    delete:
      description: Удаляет заметку по ID
      parameters:
      - description: ID заметки
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "401":
          description: Неавторизованный доступ
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Доступ запрещен
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Заметка не найдена
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      tags:
      - notes
    get:
      description: Получает заметку по ID
      parameters:
      - description: ID заметки
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Заметка
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: id заметки должен быть формата int
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Неавторизованный доступ
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Заметка не найдена или доступ запрещен
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      tags:
      - notes
    put:
      consumes:
      - application/json
      description: Обновляет существующую заметку
      parameters:
      - description: ID заметки
        in: path
        name: id
        required: true
        type: integer
      - description: Обновленная заметка
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/models.Note'
      produces:
      - application/json
      responses:
        "200":
          description: Обновленная заметка
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Неавторизованный доступ
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Заметка не найдена
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      tags:
      - notes
  /notes/{id}/share:
    post:
      consumes:
      - application/json
      description: Делает заметку доступной для другого пользователя
      parameters:
      - description: ID заметки
        in: path
        name: id
        required: true
        type: integer
      - description: ID пользователя, которому передается доступ
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/models.ShareNoteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Сообщение об успешной передаче доступа
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Неавторизованный доступ
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Запрещено
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: Передача доступа к заметке
      tags:
      - notes
  /notes/{id}/tags:
    post:
      consumes:
      - application/json
      description: Добавляет теги к заметке по ID
      parameters:
      - description: ID заметки
        in: path
        name: id
        required: true
        type: integer
      - description: Список тегов
        in: body
        name: tags
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Tag'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Обновленная заметка с тегами
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Неавторизованный доступ
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Запрещено
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Заметка не найдена
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: Добавление тегов к заметке
      tags:
      - notes
  /notes/shared-notes:
    get:
      description: Возвращает заметки, к которым у пользователя есть доступ
      produces:
      - application/json
      responses:
        "200":
          description: Список доступных заметок
          schema:
            items:
              $ref: '#/definitions/models.Note'
            type: array
        "401":
          description: Неавторизованный доступ
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: Получение списка доступных заметок
      tags:
      - notes
  /notes/tag:
    get:
      description: Возвращает список заметок, связанных с определенным тегом
      parameters:
      - description: Тег
        in: query
        name: tag
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список заметок
          schema:
            items:
              $ref: '#/definitions/models.Note'
            type: array
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Тег не найден
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Получение заметок по тегу
      tags:
      - notes
  /profile:
    get:
      description: Получает профиль текущего пользователя
      produces:
      - application/json
      responses:
        "200":
          description: Профиль пользователя
          schema:
            $ref: '#/definitions/models.UserProfile'
        "401":
          description: Неверный токен
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Ошибка при получении профиля
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - users
  /register:
    post:
      consumes:
      - application/json
      description: Регистрирует нового пользователя
      parameters:
      - description: Пользователь
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Успешно зарегистрирован
          schema:
            $ref: '#/definitions/models.UserSuccess'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Пользователь с таким именем уже существует
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      tags:
      - users
security:
- ApiKeyAuth: []
swagger: "2.0"
